<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>String.prototype.split() on Javascript Docs</title>
    <link>http://qweqwe9ab.github.io/tags/String.prototype.split/</link>
    <description>Recent content in String.prototype.split() on Javascript Docs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>qweqwe9ab@gmail.com (밤개발)</managingEditor>
    <webMaster>qweqwe9ab@gmail.com (밤개발)</webMaster>
    <lastBuildDate>Thu, 08 Jul 2021 00:55:05 +0900</lastBuildDate><atom:link href="http://qweqwe9ab.github.io/tags/String.prototype.split/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[LeetCode] 49. Group Anagrams</title>
      <link>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-49/</link>
      <pubDate>Thu, 08 Jul 2021 00:55:05 +0900</pubDate>
      <author>qweqwe9ab@gmail.com (밤개발)</author>
      <guid>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-49/</guid>
      <description>#49. Group Anagrams
문제 단어의 배열을 받아서, 단어를 구성하는 알파벳의 순서가 다르더라고 같은 알파벳 들로 구성된 단어들을 묶어서 배열로 반환하는 문제입니다.
EX) &amp;rsquo;eat&amp;rsquo;, &amp;lsquo;ate&amp;rsquo;, &amp;rsquo;tea&amp;rsquo;는 같이 묶여서 반환 됩니다.
설명 우선, 단어에 문자 순서가 다른 모든 단어를 찾고 저장하기 위해서 기준으로 알파벳 순으로 정렬된 단어를 만든다. 예를 들어 eat, ate, tae에서는 알파벳 순서로 aet가 키가 되는 것이다. 이 키를 만들기 위해서 split()으로 단어를 쪼개고, sort() 를 사용해서 알파벳의 순서를 정렬하고, join() 을 이용해서 배열을 다시 단어로 만듭니다.</description>
    </item>
    
    <item>
      <title>[LeetCode] 937. Reorder Data in Log Files</title>
      <link>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-937/</link>
      <pubDate>Wed, 07 Jul 2021 15:54:52 +0900</pubDate>
      <author>qweqwe9ab@gmail.com (밤개발)</author>
      <guid>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-937/</guid>
      <description>#937. Reorder Data in Log Files
문제 입력 받은 로그들을 문자로 이루어진 로그는 문자 알파벳순으로, 숫자 로그는 입력 순서로 정렬한다. 같은 문자의 문자로그는 식별자에 따라 정렬한다.
반환 순서는 정렬된 문자로그 + 입력 순서대로의 숫자로그 이다.
설명 우선 제가 생각한 방법은 입력받은로그를 문자로그, 숫자로그로 분류하고, 숫자로그는 입력순으로 저장한다.
문자로그는 앞에 식별자를 제외하고, 정렬작업을 진행한다.
그 후 정렬된 문자로그 + 숫자로그의 배열을 반환한다.
사용된 메소드 설명 split() join() shift() push() sort()
답 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 var reorderLogFiles = function(logs) { const digit = []; // 숫자로그를 저장할 배열 const letter = []; // 문자로그를 저장할 배열 const result = []; // 최종으로 반환할 배열 for (let log of logs) { const arr = log.</description>
    </item>
    
  </channel>
</rss>
