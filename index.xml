<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>밤에 하는 개발</title>
        <link>http://qweqwe9ab.github.io/</link>
        <description>밤에 하는 개발</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>qweqwe9ab@gmail.com (밤개발)</managingEditor>
            <webMaster>qweqwe9ab@gmail.com (밤개발)</webMaster><lastBuildDate>Mon, 05 Jul 2021 17:12:12 &#43;0900</lastBuildDate>
            <atom:link href="http://qweqwe9ab.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>[LeetCode] 7. Reverse Integer</title>
    <link>http://qweqwe9ab.github.io/posts/20200705-leetcode-7/</link>
    <pubDate>Mon, 05 Jul 2021 17:12:12 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/20200705-leetcode-7/</guid>
    <description><![CDATA[#7. Reverse Integer
문제 답 1    설명 LeetCode Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.
Assume the environment does not allow you to store 64-bit integers (signed or unsigned).
Example 1:
1 2  Input: x = 123 Output: 321   Example 2:]]></description>
</item><item>
    <title>[LeetCode] 1. Two Sum</title>
    <link>http://qweqwe9ab.github.io/posts/20200705-leetcode-1/</link>
    <pubDate>Mon, 05 Jul 2021 15:38:55 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/20200705-leetcode-1/</guid>
    <description><![CDATA[1. Two Sum 문제  숫자로 이루어진 배열과, 숫자로된 타겟을 입력받아서 배열에서 타켓을 만들 수 있는 숫자의 인덱스를 반환.
 만약에 배열 [1, 3, 6, 7]과 타겟 8을 입력 받는다면 [0, 3]를 반환한다
 답 1 2 3 4 5 6 7  var twoSum = function(nums, target) { for (let i = 0; i &lt; nums.length; i++) { const test = target - nums[i]; const index = nums.indexOf(test); if (index !]]></description>
</item><item>
    <title>Leetcode 계획</title>
    <link>http://qweqwe9ab.github.io/posts/20200705-leetcode-start/</link>
    <pubDate>Mon, 05 Jul 2021 14:39:17 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/20200705-leetcode-start/</guid>
    <description><![CDATA[Leetcode 시작. 언제든지 인터뷰를 볼 수 있도록 계속 코딩테스트를 준비할 예정입니다.
물론 경력직의 이직에서 코딩테스트가 가장 중요한 것은 아니겠지만, 나중에 어떤 기회가 올 수 있을지 모르기 때문에! 열심히 준비해 보도록 하겠습니다.
우선, Leetcode는 Easy 단계를 하나씩 순서대로 풀어보겠습니다.
매일 한 문제씩 푸는 것은 목표로 달려보겠습니다!]]></description>
</item><item>
    <title>시작.</title>
    <link>http://qweqwe9ab.github.io/posts/first_post/</link>
    <pubDate>Fri, 02 Jul 2021 15:12:43 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/first_post/</guid>
    <description><![CDATA[이직. 예전에 블로그를 시작했던 것도 이직을 위해서 였는데 이번에도 이직을 준비하면서 블로그를 시작합니다.
저번에는 hexo로 작업을 했지만 이번에는 Go언어를 배우고 있기 때문에 Hugo로 블로그를 만들었습니다.
벌써 6년이 넘게 개발을 하고 있지만 아직 길을 못 찾고 있다는 느낌이 들어서 저의 다음을 위해 지식을 쌓고, 좋은 회사를 찾아가기 위한 노력을 기록하겠습니다.]]></description>
</item><item>
    <title>[javascript] 하노이 탑 (Hanoi Tower)</title>
    <link>http://qweqwe9ab.github.io/posts/20190120-hanoi/</link>
    <pubDate>Sun, 20 Jan 2019 18:29:32 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/20190120-hanoi/</guid>
    <description><![CDATA[하노이 탑 하노이 탑은 다음과 같은 조건을 가지고 있다.
 한번에 하나의 원판만 이동 맨위에 있는 원판만 이동 가능 작은 원판 위에 큰 원판을 올리는 것은 불가능 중간의 막대는 임시적으로 이용 가능  n-1개를 A에서 B로 이동하고, n개를 A에서 C로 이동한다. 그리고 n-1개를 B에서 C로 이동한다.
1 2 3 4 5 6 7 8 9 10  let hanoi = (n, from, temp, to) =&gt; { if(n===1) console.log(`${n}을 ${from}에서 ${to}로 이동`); else { hanoi(n-1, from, to, temp); console.]]></description>
</item><item>
    <title>[javascript] 피보나치 (Fibonacci)</title>
    <link>http://qweqwe9ab.github.io/posts/20190120-fibonacci/</link>
    <pubDate>Sun, 20 Jan 2019 17:53:44 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/20190120-fibonacci/</guid>
    <description><![CDATA[피보나치 수열 0, 1, 1, 2, 3, 5, 8, 13, 21.... 피보나치는 0번째는 0, 첫 번째는 1 그 이후로는 이전 두개의 수를 더한 값을 갖는 수열이다.
F(0) = 0, F(1) = 1, F(n) = F(n-2) + F(n-1)
1 2 3 4 5 6 7 8 9 10 11  let fib = (num) =&gt; { if(num &lt;= 1) return num; return fib(num-1) + fib(num-2); } console.log(fib(1)) console.log(fib(2)) console.log(fib(3)) console.log(fib(4)) console.log(fib(5)) console.]]></description>
</item><item>
    <title>동기와 비동기</title>
    <link>http://qweqwe9ab.github.io/posts/20190119-sync-vs-async/</link>
    <pubDate>Sat, 19 Jan 2019 17:42:36 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/20190119-sync-vs-async/</guid>
    <description><![CDATA[설명 동기 여러작업을 진행 할때 하나의 작업이 끝날때 까지 기다렸다가 다음 작업을 진행하는 것.
비동기 여러작업을 진행 할때 하나의 작업을 실행하고 다음 작업으로 넘어간다. 이전에 실행한 작업은 작업이 끝나고 callback을 넘긴다.
비유 간단하게 설명하면 동기는 카페에서 손님에게 주문을 받고 커피를 만들어서 전달하고 다음 손님으로 넘어가는 것 이고 비동기는 카페에서 손님에게 주문을 받고 진동벨을 준 다음 다음 손님의 주문으로 넘어가고, 손님의 커피가 제조가 완료되면 진동벨(callback)을 울려 해당 손님에게 전달한다.
코드 동기 코드]]></description>
</item><item>
    <title>프로세스(Process) vs 쓰레드(Thread)</title>
    <link>http://qweqwe9ab.github.io/posts/20190119-process-vs-thread/</link>
    <pubDate>Sat, 19 Jan 2019 17:09:10 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/20190119-process-vs-thread/</guid>
    <description><![CDATA[프로세스  프로세스는 실행중인 프로그램이다. 디스크로에서 메모리로 적재되어 CPU의 할당을 받을 수 있다.  쓰레드  프로세스의 실행단위 한 프로세스 내에서 동작되는 여러 실행으로 프로세스내의 주소공간이나 자원을 공유한다.  멀티 쓰레드  메모리 공간과 시스템 자원 소모가 줄어들게 된다. 쓰레드 간의 공유된 자원을 사용해 쓰레드간의 통신이 간단하고 빠르다  멀티 쓰레드 문제점  자원을 공유하기 때문에 신경을 써야한다. 동기화 작업으로 인해 성능이 저하될 수 있다.  요약 프로세스는 운영체제로 부터 자원을 할당받는 자원단위(실행중인 프로그램) 쓰레드는 프로세스가 할당 받은 자원을 이용하는 실행 단위()]]></description>
</item><item>
    <title>[자료구조][자바스크립트] 스택으로 큐 구현 javascript</title>
    <link>http://qweqwe9ab.github.io/posts/20190118-queue-using-stacks/</link>
    <pubDate>Fri, 18 Jan 2019 15:46:22 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/20190118-queue-using-stacks/</guid>
    <description><![CDATA[오늘은 스택으로 큐를 구현하는 문제를 살펴보겠습니다. 스택은 LIFO - Last In First Out 방식이다. 간단하게 설명하면 책상 위에 책을 하나씩 쌓아두고 위에서부터 하나씩 집어서 읽는 것이다.
 나중에 쌓은(제일 위에 있는) 책을 먼저 집어서 읽는 방식  큐는 FIFO - First In First Out 방식이다. 간단하게 설명하면 카페에서 한 줄로 서서 주문을 하는 것이다.
 제일 먼저 온 사람이 먼저 계산하는 방식  스택과 큐에 대한 설명과 코드는 이 블로그의 글을 참조하고, 오늘은 스택으로 큐를 구현해 보겠습니다.]]></description>
</item><item>
    <title>[Codewars] 주사위 게임 &#34;Greed is Good&#34;</title>
    <link>http://qweqwe9ab.github.io/posts/20190118-codewars-greed-is-good/</link>
    <pubDate>Fri, 18 Jan 2019 15:35:22 &#43;0000</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/20190118-codewars-greed-is-good/</guid>
    <description><![CDATA[설명 문제 주사위(1-6)를 굴려서 나온 수에 따른 점수를 매겨라.
1 2 3 4 5 6 7 8  Three 1&#39;s =&gt; 1000 points Three 6&#39;s =&gt; 600 points Three 5&#39;s =&gt; 500 points Three 4&#39;s =&gt; 400 points Three 3&#39;s =&gt; 300 points Three 2&#39;s =&gt; 200 points One 1 =&gt; 100 points One 5 =&gt; 50 point   1 2 3 4 5  Throw Score --------- ------------------ 5 1 3 4 1 50 + 2 * 100 = 250 1 1 1 3 1 1000 + 100 = 1100 2 4 4 5 4 400 + 50 = 450   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  function score( dice ) { let scores = {}; let returnValue = 0; for(let i in dice) { if(scores[dice[i]]) { scores[dice[i]]++; }else { scores[dice[i]] = 1; } } for(let i in scores) { let s = scores[i]; if(i == 1 &amp;&amp; s &gt;= 3) {returnValue += 1000; s -=3;} if(i == 2 &amp;&amp; s &gt;= 3) {returnValue += 200; s -=3;} if(i == 3 &amp;&amp; s &gt;= 3) {returnValue += 300; s -=3;} if(i == 4 &amp;&amp; s &gt;= 3) {returnValue += 400; s -=3;} if(i == 5 &amp;&amp; s &gt;= 3) {returnValue += 500; s -=3;} if(i == 6 &amp;&amp; s &gt;= 3) {returnValue += 600; s -=3;} if(i == 1) returnValue += s * 100; if(i == 5) returnValue += s * 50; } return returnValue; }   다른 답 1 2 3 4 5 6 7 8 9 10  function score( dice ) { var dc = [0,0,0,0,0,0]; var tdr = [1000,200,300,400,500,600]; var sdr = [100,0,0,0,50,0]; dice.]]></description>
</item></channel>
</rss>
