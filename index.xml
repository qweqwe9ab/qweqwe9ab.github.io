<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>밤에 하는 개발</title>
        <link>http://qweqwe9ab.github.io/</link>
        <description>밤에 하는 개발</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>qweqwe9ab@gmail.com (밤개발)</managingEditor>
            <webMaster>qweqwe9ab@gmail.com (밤개발)</webMaster><lastBuildDate>Wed, 07 Jul 2021 16:12:26 &#43;0900</lastBuildDate>
            <atom:link href="http://qweqwe9ab.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>[JS Reference] String.prototype.replace()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.replace/</link>
    <pubDate>Wed, 07 Jul 2021 16:12:26 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.replace/</guid>
    <description><![CDATA[String.prototype.replace() 설명 replace() 메서드는 패턴에 일치하는 부분이 교체된 새로운 문자열을 반환한다.
 정규식, 문자열로 교체할 수 있다.
 var newStr = str.replace(regexp|substr, newSubstr|function) 매개변수 regexppattern
 정규식 객체 또는 리터럴
 substrpattern
 substr을 찾아서 새로운 값으로 변경한다. 변경 되어야 하는 string
 newSubStrreplacement
 변경될 string
 functionreplacement
 변경될 string
 반환 새로운 문자열을 반환하고 기존 문자열은 변경되지 않는다.
예제 1 2 3 4 5  console.log(&#39;hello world!&#39;.replace(&#39;l&#39;, &#39;a&#39;)); // output: &#34;healo world!]]></description>
</item><item>
    <title>[JS Reference] String.prototype.toLowerCase()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.tolowercase/</link>
    <pubDate>Wed, 07 Jul 2021 16:04:27 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.tolowercase/</guid>
    <description><![CDATA[String.prototype.toLowerCase() 설명 toLowerCase() 메서드는 문자열을 소문자로 변환해 반환한다.
예제 1 2 3  console.log(&#39;Hello World!&#39;.toLowerCase()); // output: hello world!   참고 사이트 mozilla]]></description>
</item><item>
    <title>[LeetCode] 125. Valid Palindrome</title>
    <link>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-125/</link>
    <pubDate>Wed, 07 Jul 2021 15:53:57 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-125/</guid>
    <description><![CDATA[#125. Valid Palindrome
str.toLowerCase()
문제 입력받은 문자열에서 영문자와 숫자만 고려해서(대소문자 무시) 회문인지 확인해서 true/ false 반환.
설명 우선 회문은 뒤집어도 똑같은 문자열을 말합니다. 예를들어 기러기, 탄도유도탄, 다들 잠들다 같은 말입니다.
소문자로 만들기 제가 생각한 방법은 주어진 문자열 s를 str.toLowerCase() 를 이용해서 소문자로 만들어 줍니다.
숫자와 문자를 제외한 모든것 제거 그 후에 숫자와 문자를 제외한 모든것을 str.replace()를 이용해서 제거하고,
문자열 뒤집기 문자열을 뒤집어 주기 위해서 split() 으로 문자열을 쪼개서 배열로 만들고, reverse() 를 이용해서 배열의 순서를 뒤집고, join() 을 이용해서 배열을 문자열로 만들고 나면 뒤집어진 문자열이 생성됩니다.]]></description>
</item><item>
    <title>[JS Reference] String.prototype.indexOf()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.indexof/</link>
    <pubDate>Wed, 07 Jul 2021 14:34:48 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.indexof/</guid>
    <description><![CDATA[String.prototype.indexOf() 설명 str.indexOf(searchValue[, fromIndex]) 메서드는 호출한 String에서 주어진 값과 일치하는 첫 번째 인덱스를 반환한다. 일치하는 값이 없으면 -1을 반환한다.
매개변수 searchValue
 주어진 String에서 찾을 값, searchValue값이 없다면 문자열 undefined를 찾으려는 것으로 간주한다.
  fromIndexoptional 문자열에서 찾기 시작하는 위치 인덱스 값.
 반환값 첫 번째 인덱스를 반환하고, 찾을 수 없다면 -1을 반환한다.
예제 1 2 3 4 5 6 7 8 9  console.log(&#39;Hello World!&#39;.indexOf(&#39;llo&#39;)); // output: 2  console.]]></description>
</item><item>
    <title>[JS Reference] Array.prototype.includes()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/array.prototype.includes/</link>
    <pubDate>Wed, 07 Jul 2021 14:34:40 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/array.prototype.includes/</guid>
    <description><![CDATA[Array.prototype.includes() 설명 arr.includes(valueToFind[, fromIndex]) 메서드는 배열이 특정 요소를 포함하고 있는지 확인한다.
반환값은 true / false
매개변수 valueToFind
 찾을 요소, 대소문자 구분
 fromIndexoptional
 찾기 시작할 위치 인덱스 기본값은 0이다.
 예제 1 2 3 4 5 6 7 8  console.log([&#39;H&#39;, &#39;L&#39;, &#39;A&#39;, &#39;Apple&#39;, &#39;D&#39;, &#39;Facebook&#39;].includes(&#39;A&#39;)); // output: true console.log([&#39;H&#39;, &#39;L&#39;, &#39;A&#39;, &#39;Apple&#39;, &#39;D&#39;, &#39;Facebook&#39;].includes(&#39;C&#39;)); // output: false console.log([&#39;H&#39;, &#39;L&#39;, &#39;A&#39;, &#39;Apple&#39;, &#39;D&#39;, &#39;Facebook&#39;].includes(&#39;Apple&#39;)); // output: true console.log([&#39;H&#39;, &#39;L&#39;, &#39;A&#39;, &#39;Apple&#39;, &#39;D&#39;, &#39;Facebook&#39;].]]></description>
</item><item>
    <title>[LeetCode] 14. Longest Common Prefix</title>
    <link>http://qweqwe9ab.github.io/posts/leetcode/20200706-leetcode-14/</link>
    <pubDate>Wed, 07 Jul 2021 13:27:57 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/leetcode/20200706-leetcode-14/</guid>
    <description><![CDATA[#14. Longest Common Prefix
문제 주어진 문자열의 배열에서 가장 긴 접두사를 찾는 문제.
설명 처음에는 접두사라는게 뭔지몰라서 가장긴 공통된 문자열을 찾는 줄 알고, 열심히 코드를 만들었습니다. 근데 Submit을 눌러보니 계속 틀렸다고 나와서 접두사를 검색해보고 다시 코드를 만들었습니다. 제가 실수로 만든 가장 긴 공통된 문자열을 찾는 코드는 아래 따로 설명하겠습니다.
자세한 설명은 코드에 주석으로 적겠지만, 간단하게 말하면 입력받은 모든 문자열을 돌면서 가장긴 접두사를 찾습니다. indexOf() 를 사용해서 indexOf() 가 0 을 반환하는지 확인해서 접두사인지 확인할 수 있습니다.]]></description>
</item><item>
    <title>[LeetCode] 13. Roman to Integer</title>
    <link>http://qweqwe9ab.github.io/posts/leetcode/20200706-leetcode-13/</link>
    <pubDate>Wed, 07 Jul 2021 02:26:12 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/leetcode/20200706-leetcode-13/</guid>
    <description><![CDATA[#13. Roman to Integer
문제 로마 숫자는 일곱 가지 기호로 표시됩니다 : I, V, X, L, C, D와 M. 입력받은 로마 숫자를 정수로 변환해서 리턴하는 문제입니다.
답 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  var romanToInt = function(s) { const romanNumerals = { &#39;I&#39;: 1, &#39;V&#39;: 5, &#39;X&#39;: 10, &#39;L&#39;: 50, &#39;C&#39;: 100, &#39;D&#39;: 500, &#39;M&#39;: 1000, }; let prev = 0; let result = 0; for(let i = 0; i&lt;s.]]></description>
</item><item>
    <title>[JS Reference] parseInt()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/parseint/</link>
    <pubDate>Tue, 06 Jul 2021 14:32:22 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/parseint/</guid>
    <description><![CDATA[parseInt(string, radix) 설명 매개변수 string는 문자열이 아니라면 문자열로 변환하고 선행 공백은 무시합니다.
radixoptional 2와 36 사이의 진수(default가 10이 아니다.)
 string 이 &ldquo;0x&rdquo; 나 &ldquo;0X&quot;로 시작한다면, radix 는 16(16진) string 이 &ldquo;0&quot;으로 시작한다면, radix 는 8(8진)이거나, 10(십진)입니다. string 이 다른 값으로 시작 된다면, radix 는 10(십진)입니다.
 반환값 주어진 string으로부터 분석한 radix진수의 정수를 반환합니다.
 숫자로 시작하고, 중간에 숫자가 아닌 문자가 나오는 경우는 문자를 무시하고 앞까지의 숫자를 리턴한다.
  NaN을 반환하는 경우: radix가 2보다 작거나 36보다 큰 경우 첫번째 non-whitespace 문자가 숫자로 변환되지 않는 경우]]></description>
</item><item>
    <title>[JS Reference] String.prototype.toString()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.tostring/</link>
    <pubDate>Tue, 06 Jul 2021 14:25:08 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.tostring/</guid>
    <description><![CDATA[String.prototype.toString() 설명 toString() 메소드는 지정된 객체를 나타내는 문자열을 반환합니다.
예제 1 2 3 4 5 6 7 8 9  console.log(&#39;asd&#39;.toString()); // output: &#39;asd&#39;  console.log(&#39;2020&#39;.toString()); // output: &#39;2020&#39;  console.log(&#39;2020Hello&#39;.toString()); // output: &#39;2020Hello&#39;    참고 사이트 mozilla]]></description>
</item><item>
    <title>[JS Reference] Math.sign()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/math.sign/</link>
    <pubDate>Tue, 06 Jul 2021 14:24:27 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/math.sign/</guid>
    <description><![CDATA[Math.sign() 설명 sign(x)는 매개변수를 숫자로 변경하고 x의 부호를 반환합니다.
 양수, 음수, 양수인 영 또는 음수인 영을 구분해서 1, -1, 0, -0을 반환합니다. 그게 아니라면 NaN을 반환합니다.
 예제 반환값이 1인 경우 1 2 3 4 5 6 7 8 9 10 11  console.log(Math.sign(10)); // output: 1  console.log(Math.sign(&#34;20&#34;)); // output: 1  console.log(Math.sign(24120)); // output: 1  console.log(Math.sign(1)); // output: 1   반환값이 -1인 경우 1 2 3 4 5 6 7 8 9 10 11  console.]]></description>
</item></channel>
</rss>
