<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Dev - Category - 밤에 하는 개발</title>
        <link>http://qweqwe9ab.github.io/categories/dev/</link>
        <description>Dev - Category - 밤에 하는 개발</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>qweqwe9ab@gmail.com (밤개발)</managingEditor>
            <webMaster>qweqwe9ab@gmail.com (밤개발)</webMaster><lastBuildDate>Thu, 08 Jul 2021 02:29:16 &#43;0900</lastBuildDate><atom:link href="http://qweqwe9ab.github.io/categories/dev/" rel="self" type="application/rss+xml" /><item>
    <title>[JS Reference] Array.prototype.sort()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/array.prototype.sort/</link>
    <pubDate>Thu, 08 Jul 2021 02:29:16 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/array.prototype.sort/</guid>
    <description><![CDATA[Array.prototype.sort() 설명 매개변수 ``optional
  예제 1 2  console.log(); // output:   매개변수 사용법 1 2  console.log(); // output:   참고 사이트 mozilla]]></description>
</item><item>
    <title>[LeetCode] 49. Group Anagrams</title>
    <link>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-49/</link>
    <pubDate>Thu, 08 Jul 2021 00:55:05 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-49/</guid>
    <description><![CDATA[#49. Group Anagrams
문제 단어의 배열을 받아서, 단어를 구성하는 알파벳의 순서가 다르더라고 같은 알파벳 들로 구성된 단어들을 묶어서 배열로 반환하는 문제입니다.
 EX) &lsquo;eat&rsquo;, &lsquo;ate&rsquo;, &lsquo;tea&rsquo;는 같이 묶여서 반환 됩니다.
 설명 우선, 단어에 문자 순서가 다른 모든 단어를 찾고 저장하기 위해서 기준으로 알파벳 순으로 정렬된 단어를 만든다. 예를 들어 eat, ate, tae에서는 알파벳 순서로 aet가 키가 되는 것이다. 이 키를 만들기 위해서 split()으로 단어를 쪼개고, sort() 를 사용해서 알파벳의 순서를 정렬하고, join() 을 이용해서 배열을 다시 단어로 만듭니다.]]></description>
</item><item>
    <title>[JS Reference] String.prototype.replace()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.replace/</link>
    <pubDate>Wed, 07 Jul 2021 16:12:26 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.replace/</guid>
    <description><![CDATA[String.prototype.replace() 설명 replace() 메서드는 패턴에 일치하는 부분이 교체된 새로운 문자열을 반환한다.
 정규식, 문자열로 교체할 수 있다.
 var newStr = str.replace(regexp|substr, newSubstr|function) 매개변수 regexppattern
 정규식 객체 또는 리터럴
 substrpattern
 substr을 찾아서 새로운 값으로 변경한다. 변경 되어야 하는 string
 newSubStrreplacement
 변경될 string
 functionreplacement
 변경될 function
 반환 새로운 문자열을 반환하고 기존 문자열은 변경되지 않는다.
예제 1 2 3 4 5  console.log(&#39;hello world!&#39;.replace(&#39;l&#39;, &#39;a&#39;)); // output: &#34;healo world!]]></description>
</item><item>
    <title>[JS Reference] String.prototype.toLowerCase()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.tolowercase/</link>
    <pubDate>Wed, 07 Jul 2021 16:04:27 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.tolowercase/</guid>
    <description><![CDATA[String.prototype.toLowerCase() 설명 toLowerCase() 메서드는 문자열을 소문자로 변환해 반환한다.
예제 1 2 3  console.log(&#39;Hello World!&#39;.toLowerCase()); // output: hello world!   참고 사이트 mozilla]]></description>
</item><item>
    <title>[LeetCode] 819. Most Common Word</title>
    <link>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-819/</link>
    <pubDate>Wed, 07 Jul 2021 15:54:59 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-819/</guid>
    <description><![CDATA[#819. Most Common Word
문제 주어진 문자열 paragraph에서 가장 많이 나온 단어를 반환하는 문제입니다. 단어는 대소문자를 구분하지 않으며 소문자로 리턴합니다.
설명 우선 paragraph는 대소문자를 구분하지 않지 때문에 str.toLowerCase() 를 이용해서 전부 소문자로 변경해줍니다.
그리고 str.replace() 를 통해 문자를 제외한 것들을 제거합니다. 문자만 남은 문자열에서 빈칸 ' &lsquo;을 기준으로 split()을 사용해서 자르고 단어의 배열로 만들어 줍니다. 이 단어의 배열을 돌면서 includes() 를 이용해서 banned에 포함되는 단어는 제외하하고, 단어를 키로, 나온 횟수를 값으로 가지는 data에 저장을하고, 이 data를 반복문으로 돌려 가장 많은 횟수를 가진 단어를 반환합니다.]]></description>
</item><item>
    <title>[LeetCode] 937. Reorder Data in Log Files</title>
    <link>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-937/</link>
    <pubDate>Wed, 07 Jul 2021 15:54:52 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-937/</guid>
    <description><![CDATA[#937. Reorder Data in Log Files
문제 답 1    설명 LeetCode You are given an array of logs. Each log is a space-delimited string of words, where the first word is the identifier.
There are two types of logs:
 Letter-logs: All words (except the identifier) consist of lowercase English letters. Digit-logs: All words (except the identifier) consist of digits.  Reorder these logs so that:
 The letter-logs come before all digit-logs.]]></description>
</item><item>
    <title>[LeetCode] 344. Reverse String</title>
    <link>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-344/</link>
    <pubDate>Wed, 07 Jul 2021 15:54:45 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-344/</guid>
    <description><![CDATA[#344. Reverse String
문제 입력받은 문자 배열을 뒤집어라.
설명 배열의 순서를 뒤집어 주는 reverse() 메소드를 사용해서 배열의 순서를 뒤집습니다.
답 1 2 3  var reverseString = function(s) { return s.reverse(); };   LeetCode Write a function that reverses a string. The input string is given as an array of characters s.
Example 1:
1 2  Input: s = [&#34;h&#34;,&#34;e&#34;,&#34;l&#34;,&#34;l&#34;,&#34;o&#34;] Output: [&#34;o&#34;,&#34;l&#34;,&#34;l&#34;,&#34;e&#34;,&#34;h&#34;]   Example 2:
1 2  Input: s = [&#34;H&#34;,&#34;a&#34;,&#34;n&#34;,&#34;n&#34;,&#34;a&#34;,&#34;h&#34;] Output: [&#34;h&#34;,&#34;a&#34;,&#34;n&#34;,&#34;n&#34;,&#34;a&#34;,&#34;H&#34;]   Constraints:]]></description>
</item><item>
    <title>[LeetCode] 125. Valid Palindrome</title>
    <link>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-125/</link>
    <pubDate>Wed, 07 Jul 2021 15:53:57 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/leetcode/20200707-leetcode-125/</guid>
    <description><![CDATA[#125. Valid Palindrome
str.toLowerCase()
문제 입력받은 문자열에서 영문자와 숫자만 고려해서(대소문자 무시) 회문인지 확인해서 true/ false 반환.
설명 우선 회문은 뒤집어도 똑같은 문자열을 말합니다. 예를들어 기러기, 탄도유도탄, 다들 잠들다 같은 말입니다.
소문자로 만들기 제가 생각한 방법은 주어진 문자열 s를 str.toLowerCase() 를 이용해서 소문자로 만들어 줍니다.
숫자와 문자를 제외한 모든것 제거 그 후에 숫자와 문자를 제외한 모든것을 str.replace()를 이용해서 제거하고,
문자열 뒤집기 문자열을 뒤집어 주기 위해서 split() 으로 문자열을 쪼개서 배열로 만들고, reverse() 를 이용해서 배열의 순서를 뒤집고, join() 을 이용해서 배열을 문자열로 만들고 나면 뒤집어진 문자열이 생성됩니다.]]></description>
</item><item>
    <title>[JS Reference] String.prototype.indexOf()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.indexof/</link>
    <pubDate>Wed, 07 Jul 2021 14:34:48 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/string.prototype.indexof/</guid>
    <description><![CDATA[String.prototype.indexOf() 설명 str.indexOf(searchValue[, fromIndex]) 메서드는 호출한 String에서 주어진 값과 일치하는 첫 번째 인덱스를 반환한다. 일치하는 값이 없으면 -1을 반환한다.
매개변수 searchValue
 주어진 String에서 찾을 값, searchValue값이 없다면 문자열 undefined를 찾으려는 것으로 간주한다.
  fromIndexoptional 문자열에서 찾기 시작하는 위치 인덱스 값.
 반환값 첫 번째 인덱스를 반환하고, 찾을 수 없다면 -1을 반환한다.
예제 1 2 3 4 5 6 7 8 9  console.log(&#39;Hello World!&#39;.indexOf(&#39;llo&#39;)); // output: 2  console.]]></description>
</item><item>
    <title>[JS Reference] Array.prototype.includes()</title>
    <link>http://qweqwe9ab.github.io/posts/jsreference/array.prototype.includes/</link>
    <pubDate>Wed, 07 Jul 2021 14:34:40 &#43;0900</pubDate>
    <author>Author</author>
    <guid>http://qweqwe9ab.github.io/posts/jsreference/array.prototype.includes/</guid>
    <description><![CDATA[Array.prototype.includes() 설명 arr.includes(valueToFind[, fromIndex]) 메서드는 배열이 특정 요소를 포함하고 있는지 확인한다.
반환값은 true / false
매개변수 valueToFind
 찾을 요소, 대소문자 구분
 fromIndexoptional
 찾기 시작할 위치 인덱스 기본값은 0이다.
 예제 1 2 3 4 5 6 7 8  console.log([&#39;H&#39;, &#39;L&#39;, &#39;A&#39;, &#39;Apple&#39;, &#39;D&#39;, &#39;Facebook&#39;].includes(&#39;A&#39;)); // output: true console.log([&#39;H&#39;, &#39;L&#39;, &#39;A&#39;, &#39;Apple&#39;, &#39;D&#39;, &#39;Facebook&#39;].includes(&#39;C&#39;)); // output: false console.log([&#39;H&#39;, &#39;L&#39;, &#39;A&#39;, &#39;Apple&#39;, &#39;D&#39;, &#39;Facebook&#39;].includes(&#39;Apple&#39;)); // output: true console.log([&#39;H&#39;, &#39;L&#39;, &#39;A&#39;, &#39;Apple&#39;, &#39;D&#39;, &#39;Facebook&#39;].]]></description>
</item></channel>
</rss>
