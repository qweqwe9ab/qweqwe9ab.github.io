<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>ETC on Qweqwe9ab Tech Blog</title>
        <link>http://qweqwe9ab.github.io/categories/ETC/</link>
        <description>Recent content in ETC on Qweqwe9ab Tech Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <managingEditor>qweqwe9ab@gmail.com (밤개발)</managingEditor>
        <webMaster>qweqwe9ab@gmail.com (밤개발)</webMaster>
        <lastBuildDate>Wed, 08 Dec 2021 14:47:11 +0900</lastBuildDate><atom:link href="http://qweqwe9ab.github.io/categories/ETC/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>2022년 계획</title>
        <link>http://qweqwe9ab.github.io/posts/etc/</link>
        <pubDate>Wed, 08 Dec 2021 14:47:11 +0900</pubDate>
        <author>qweqwe9ab@gmail.com (밤개발)</author>
        <guid>http://qweqwe9ab.github.io/posts/etc/</guid>
        <description>&lt;p&gt;인생의 전환점을 맞았던 21년은 새로운 인생을 위해서 조금 쉬어가는 시간을 보냈어&lt;/p&gt;
&lt;p&gt;22년은 전환점을 지나서 새로운 시작이라고 생각하고, 새로운 계획을 세워보려해.&lt;/p&gt;
&lt;p&gt;22년의 키워드는 지식 저장이야.&lt;/p&gt;
&lt;p&gt;개발자는 공부를 많이 해야하는 직업이고, 새로운 지식을 늘려야 하는 직업이야&lt;/p&gt;
&lt;p&gt;근데 나는 아직 공부와 지식을 저장하는 방법을 모른다고 생각해&lt;/p&gt;
&lt;p&gt;그래서 22년도에는 공부하는 방법과 지식을 저장하는 방법에 대해서 생각하고, 노력하는 시간으로 정했어&lt;/p&gt;
&lt;p&gt;공부와 지식을 저장하는 방법을 그냥 지식 저장법이라고 이야기 할게&lt;/p&gt;
&lt;p&gt;우선 지금 생각하는 지식을 저장하는 방법은 블로그에 저장하는 방법과 메모장에 저장하는 거야&lt;/p&gt;
&lt;p&gt;그리고 개인 프로젝트를 진행하면서 프로젝트 안에 저장하는 방법이야&lt;/p&gt;
&lt;p&gt;간단하게 트위터로 짧은 생각과 지식을 기록하고, 그 짧은 지식을 모아서 메모장에 저장한 후에&lt;/p&gt;
&lt;p&gt;정리해서 블로그에 기록할거야&lt;/p&gt;
&lt;p&gt;그 기록한 지식을을 모아서 내 개인 프로젝트에 적용할거고&lt;/p&gt;
&lt;p&gt;22년 후기에는 기록된 지식들을 한번 이야기하는 시간을 가질거야&lt;/p&gt;
</description>
        </item>
        <item>
        <title>2021 하반기 계획.</title>
        <link>http://qweqwe9ab.github.io/</link>
        <pubDate>Thu, 23 Sep 2021 14:39:46 +0900</pubDate>
        <author>qweqwe9ab@gmail.com (밤개발)</author>
        <guid>http://qweqwe9ab.github.io/</guid>
        <description>&lt;p&gt;안녕하세요 밤개발입니다.&lt;/p&gt;
&lt;p&gt;아무도 들어오지 않는 블로그지만, 현재 제 상황을 제가 파악해야된다는 생각이 들어서 글을 적어봅니다.&lt;/p&gt;
&lt;p&gt;현재 퇴직 후 이직 준비중인데, 아직 부족한게 많다고 느껴지네요&lt;/p&gt;
&lt;p&gt;이제 경력이 주니어에서 시니어로 넘어가는 시점이기는 한데, 인터넷상의 다른 개발자 분들의
글과 이야기를 들어보면 한없이 작아집니다.&lt;/p&gt;
&lt;p&gt;물론 제가 다른 분들에 비해 뛰어난 부분도 있다고 생각합니다.
하지만, 개발적인 기술적인 스킬이 아직 부족합니다.&lt;/p&gt;
</description>
        </item>
        <item>
        <title>프로세스(Process) vs 쓰레드(Thread)</title>
        <link>http://qweqwe9ab.github.io/posts/old/20190119-Process-VS-Thread/</link>
        <pubDate>Sat, 19 Jan 2019 17:09:10 +0000</pubDate>
        <author>qweqwe9ab@gmail.com (밤개발)</author>
        <guid>http://qweqwe9ab.github.io/posts/old/20190119-Process-VS-Thread/</guid>
        <description>&lt;h2 id=&#34;프로세스&#34;&gt;프로세스&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;프로세스는 실행중인 프로그램이다.&lt;/li&gt;
&lt;li&gt;디스크로에서 메모리로 적재되어 CPU의 할당을 받을 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;쓰레드&#34;&gt;쓰레드&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;프로세스의 실행단위&lt;/li&gt;
&lt;li&gt;한 프로세스 내에서 동작되는 여러 실행으로 프로세스내의 주소공간이나 자원을 공유한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;멀티-쓰레드&#34;&gt;멀티 쓰레드&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;메모리 공간과 시스템 자원 소모가 줄어들게 된다.&lt;/li&gt;
&lt;li&gt;쓰레드 간의 공유된 자원을 사용해 쓰레드간의 통신이 간단하고 빠르다&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;멀티-쓰레드-문제점&#34;&gt;멀티 쓰레드 문제점&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;자원을 공유하기 때문에 신경을 써야한다.&lt;/li&gt;
&lt;li&gt;동기화 작업으로 인해 성능이 저하될 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;요약&#34;&gt;요약&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;프로세스&lt;/code&gt;는 운영체제로 부터 자원을 할당받는 자원단위(실행중인 프로그램)
&lt;code&gt;쓰레드&lt;/code&gt;는 프로세스가 할당 받은 자원을 이용하는 실행 단위()&lt;/p&gt;
&lt;p&gt;&lt;code&gt;멀티 쓰레드&lt;/code&gt;는 적은 메모리 사용과 빠르지만 자원을 공유해 신경쓸 것이 많다. &lt;code&gt;멀트 프로세스&lt;/code&gt;는 자원을 많이 사용하지만 공유된 자원이 없어 신경쓸 것이 적다.&lt;/p&gt;
&lt;h3 id=&#34;related-posts&#34;&gt;Related Posts&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>REST API</title>
        <link>http://qweqwe9ab.github.io/posts/old/20190117-Rest-API/</link>
        <pubDate>Thu, 17 Jan 2019 17:12:02 +0000</pubDate>
        <author>qweqwe9ab@gmail.com (밤개발)</author>
        <guid>http://qweqwe9ab.github.io/posts/old/20190117-Rest-API/</guid>
        <description>&lt;h2 id=&#34;rest-api&#34;&gt;REST API&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;REST (Representational State Transfer)&lt;/li&gt;
&lt;li&gt;web의 장점을 최대한 활용할 수 있는 아키텍쳐&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;http-메서드&#34;&gt;HTTP 메서드&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;메서드&lt;/th&gt;
&lt;th&gt;의미&lt;/th&gt;
&lt;th&gt;멱등성&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;POST&lt;/td&gt;
&lt;td&gt;Create&lt;/td&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GET&lt;/td&gt;
&lt;td&gt;Select&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PUT&lt;/td&gt;
&lt;td&gt;Update&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;DELETE&lt;/td&gt;
&lt;td&gt;Delete&lt;/td&gt;
&lt;td&gt;O&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;멱등성 : 연산을 여러번해도 달라지지 않는것.&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;REST는 상태 없이 API를 수행한다 그래서 여러 API를 호출하다 실패시 복구해야 하는데 멱등성 메서드는 복구가 필요없다.&lt;/li&gt;
&lt;li&gt;REST는 리소스 지향으로 모든 것은 명사로 표현한다.&lt;/li&gt;
&lt;li&gt;각 세부 리소스에는 ID를 추가한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rest-api의-특성&#34;&gt;REST API의 특성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;유니폼 인터페이스&lt;/code&gt; : 표준만 따르면 어떤 기술이라도 사용가능&lt;/li&gt;
&lt;li&gt;&lt;code&gt;무상태성 / 스테이트리스&lt;/code&gt; : 서버는 상태를 저장하지 않으므로 각 API 서버는 들어오는 요청만 수행, 구현이 단순&lt;/li&gt;
&lt;li&gt;&lt;code&gt;캐슁가능&lt;/code&gt; : HTTP에서 제공하는 캐슁 가능&lt;/li&gt;
&lt;li&gt;&lt;code&gt;자체 표현구조&lt;/code&gt; : REST API만 보고 쉽게 이해할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Client - Server 구조&lt;/code&gt; : 서버는 API를 제공하고 클라이언트는 세션, 로그인 정보등을 직접 관리&lt;/li&gt;
&lt;li&gt;&lt;code&gt;계층형 구조&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;참고자료&#34;&gt;참고자료&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.microsoft.com/ko-kr/azure/architecture/best-practices/api-design?fbclid=IwAR1wp78e2nz7kCjcQKlR1jzgsBPd1D2D3OK4YAo4XKbBjJnj7WBLnWcAXxo%23organize-the-api-around-resources&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;API 디자인&lt;/a&gt;
&lt;a class=&#34;link&#34; href=&#34;https://meetup.toast.com/posts/92&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;REST API 제대로 알고 사용하기&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;related-posts&#34;&gt;Related Posts&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>http와 https</title>
        <link>http://qweqwe9ab.github.io/posts/old/20190117-http-vs-https/</link>
        <pubDate>Thu, 17 Jan 2019 16:15:54 +0000</pubDate>
        <author>qweqwe9ab@gmail.com (밤개발)</author>
        <guid>http://qweqwe9ab.github.io/posts/old/20190117-http-vs-https/</guid>
        <description>&lt;h3 id=&#34;related-posts&#34;&gt;Related Posts&lt;/h3&gt;
&lt;h2 id=&#34;http-hyper-text-transfer-protocol&#34;&gt;http (Hyper Text Transfer Protocol)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Client와 Server가 메세지를 주고 받는 통신 규약&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://&lt;/code&gt;로 시작&lt;/li&gt;
&lt;li&gt;메세지를 암호화 하지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;https-hyper-text-transfer-protocol-secure-socket-layer&#34;&gt;https (Hyper Text Transfer Protocol Secure Socket Layer)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Client와 Server가 메세지를 주고 받는 통신 규약&lt;/li&gt;
&lt;li&gt;&lt;code&gt;https://&lt;/code&gt;로 시작&lt;/li&gt;
&lt;li&gt;메세지를 &lt;code&gt;암호화&lt;/code&gt;함&lt;/li&gt;
&lt;li&gt;공개키, 개인키 암호화&lt;/li&gt;
&lt;li&gt;SSL 인증서 구입 비용과 갱신 비용이 비싸다&lt;/li&gt;
&lt;li&gt;암호화로 속도가 느리다&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;related-posts-1&#34;&gt;Related Posts&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>2019년도 계획.</title>
        <link>http://qweqwe9ab.github.io/posts/old/20190114-2019-Plan/</link>
        <pubDate>Mon, 14 Jan 2019 18:07:26 +0000</pubDate>
        <author>qweqwe9ab@gmail.com (밤개발)</author>
        <guid>http://qweqwe9ab.github.io/posts/old/20190114-2019-Plan/</guid>
        <description>&lt;h2 id=&#34;2018&#34;&gt;2018..&lt;/h2&gt;
&lt;p&gt;2019년의 계획을 세우기 전에 2018년을 돌아보면 정신적으로 힘들일의 연속이였다.
오래 일하던 회사 사정으로 갑자기 이직을 준비해야 하는 상황이 주어졌다.
여러 가지 일들로 정신력이 탈탈 털리고 아직 정신을 회복하고 있다.&lt;/p&gt;
&lt;p&gt;그래도 2019년에는 좋은일이 많을 거라고 예상하면서 2019년 계획을 세워보기로 한다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;이직&lt;/li&gt;
&lt;li&gt;새로운 언어 공부&lt;/li&gt;
&lt;li&gt;javascript 더 집중적으로 공부&lt;/li&gt;
&lt;li&gt;블로그 시작하기&lt;/li&gt;
&lt;li&gt;다이어트&lt;/li&gt;
&lt;li&gt;유튜브 시작하기&lt;/li&gt;
&lt;li&gt;github에 코드 올리기&lt;/li&gt;
&lt;li&gt;개인 프로젝트 진행&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;우선 이직이 제일 급한 문제이기 때문에 이직에 관련된 글들을 많이 작성할 예정입니다.
면접 질문, 알고리즘, 자료구조 등등&lt;/p&gt;
&lt;p&gt;하루에 하나 정도는 올리는 게 목표인데 어떻게 될지는 모르겠다.&lt;/p&gt;
&lt;h3 id=&#34;related-posts&#34;&gt;Related Posts&lt;/h3&gt;
</description>
        </item>
        
    </channel>
</rss>
